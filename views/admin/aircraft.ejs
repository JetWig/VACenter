<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Adminstration | <%= config.vaInfo.name %>
    </title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/4.1.5/css/flag-icons.min.css">
    <link href="https://cdn.jsdelivr.net/npm/gridjs/dist/theme/mermaid.min.css" rel="stylesheet" />
    <%- include('../components/head')%>
</head>

<body class="p-2 p-md-5 pt-4">
    <%- include('../components/nav')%>
        <%- include('../components/adminNav')%>

            <div class="mt-5">
                <h1 class="fw-bold">Aircraft <button class="btn btn-primary" data-bs-toggle="modal"
                        data-bs-target="#newAircraft"><i class="bi bi-plus-circle-fill"></i> Add Vehicle</button></h1>
                <div class="modal fade text-dark" id="newAircraft" tabindex="-1" aria-hidden="true">
                    <div class="modal-dialog">
                        <form action="/api/aircraft/new" method="POST" class="needs-validation" novalidate>
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel">Add New Aircraft to Fleet</h5>
                                    <button type="button" class="btn-close" data-bs-dismiss="modal"
                                        aria-label="Close"></button>
                                </div>
                                <div class="modal-body text-center">
                                    <h2 class="fw-bold">New Aircraft</h2>
                                    <div class="row row-cols-1">
                                        <div class="col mb-4">
                                            <label for="aircraftSelect" class="form-label">Aircraft</label>
                                            <select class="form-select" id="aircraftSelect" name="aircraftID" required>
                                                <option disabled selected>Loading...</option>
                                            </select>
                                            <div class="valid-feedback">
                                                Looks good!
                                            </div>
                                            <div class="invalid-feedback">
                                                Need a valid name.
                                            </div>
                                        </div>
                                        <div class="col mb-4">
                                            <label for="liverySelect" class="form-label">Livery</label>
                                            <select class="form-select" id="liverySelect" name="liveryID" required>
                                                <option disabled selected>Loading...</option>
                                            </select>
                                            <div class="valid-feedback">
                                                Looks good!
                                            </div>
                                            <div class="invalid-feedback">
                                                Need a valid name.
                                            </div>
                                        </div>
                                        <div class="col mb-4">
                                            <label for="minRank" class="form-label">Minimum Rank</label>
                                            <select class="form-select" id="rankSelect" name="minRank" required>
                                                <% ranks.forEach(rank =>{%>
                                                    <option value="<%= rank.minH%>"><%= rank.label%></option>    
                                                <%})%>
                                            </select>
                                            <div class="valid-feedback">
                                                Looks good!
                                            </div>
                                            <div class="invalid-feedback">
                                                Need a valid name.
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary"
                                        data-bs-dismiss="modal">Close</button>
                                    <button type="submit" class="btn btn-primary">Create</button>
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
                <div id="wrapper"></div>
            </div>


            <%- include('../components/scripts')%>
                <script src="/public/scripts/progress.min.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/gridjs/dist/gridjs.umd.js"></script>
                <script src="https://cdn.jsdelivr.net/npm/gridjs/plugins/selection/dist/selection.umd.js"></script>
                <script src="https://code.jquery.com/jquery-3.6.0.slim.min.js"
                    integrity="sha256-u7e5khyithlIdTpu22PHhENmPcRdFiHRjhAuHcs05RI=" crossorigin="anonymous"></script>
                <script>
                    (function () {
                        'use strict'

                        // Fetch all the forms we want to apply custom Bootstrap validation styles to
                        var forms = document.querySelectorAll('.needs-validation')

                        // Loop over them and prevent submission
                        Array.prototype.slice.call(forms)
                            .forEach(function (form) {
                                form.addEventListener('submit', function (event) {
                                    if (!form.checkValidity()) {
                                        event.preventDefault()
                                        event.stopPropagation()
                                    }

                                    form.classList.add('was-validated')
                                }, false)
                            })
                    })();
                    
                    const grid = new gridjs.Grid({
                        columns: ['Aircraft', 'Livery', 'Minimum Hours',  {
                            name: 'Actions',
                            sort: { enabled: false },
                            formatter: (cell, row) => {
                                return gridjs.h('button', {
                                    className: 'btn btn-danger',
                                    disabled: row.cells[3].data == 1 ? "true": undefined,
                                    onClick: () => deleteOperator(row.cells[2].data)
                                }, row.cells[3].data == 1 ? "Can't delete own VA" : "Delete");
                            }
                        }, {
                                name: "id",
                                hidden: true
                            }],
                        server: {
                            url: '/api/aircraft/all',
                            then: data => data.data.map(aircraft =>
                                [aircraft.aircraftName, aircraft.liveryName, aircraft.minH, aircraft.liveryID]
                            )
                        },
                        style: {
                            table: {
                                width: '100%'
                            },
                            td: {
                                overflowX: "scroll"
                            }
                        },
                        search: {
                            enabled: true
                        },
                        language: {
                            'search': {
                                'placeholder': 'üîç Search...'
                            }
                        },
                        className: {
                            td: 'grid-td',
                        },
                        sort: true,
                        pagination: {
                            enabled: true,
                            limit: 10,
                            summary: true
                        }
                    }).render(document.getElementById("wrapper"));

                    function deleteOperator(opID) {
                        const data = `opID=${opID}`;

                        const xhr = new XMLHttpRequest();
                        xhr.withCredentials = true;

                        xhr.addEventListener("readystatechange", function () {
                            if (this.readyState === this.DONE) {
                                if (this.status == 200) {
                                    window.location.reload();
                                } else {
                                    alert("An error occured, see console");
                                    console.error([this.status, this.statusText, this.responseText]);
                                }
                            }
                        });

                        xhr.open("DELETE", "/api/codeshare/delete");
                        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");

                        xhr.send(data);
                    }
                    
                    //Utils
                    function mapToJson(map) {
                        return JSON.stringify([...map]);
                    }
                    function jsonToMap(jsonStr) {
                        return new Map(JSON.parse(jsonStr));
                    }
                </script>
                <script>
                    function sort(id) {
                            var sel = $(`#${id}`);
                            var selected = sel.val(); // cache selected value, before reordering
                            var opts_list = sel.find('option');
                            opts_list.sort(function (a, b) { return $(a).text() > $(b).text() ? 1 : -1; });
                            sel.html('').append(opts_list);
                            sel.val(selected); // set cached selected value
                            document.getElementById(id).selectedIndex = 0;
                        }
                    

                    //Load Aircraft
                        let aircraftMap = new Map();
                        (function () {
                            const data = null;
                            const xhr = new XMLHttpRequest();

                            xhr.addEventListener("readystatechange", function () {
                                if (this.readyState === this.DONE) {
                                    if (this.status == 200) {
                                        const jsonBody = JSON.parse(this.responseText);
                                        aircraftMap = jsonToMap(jsonBody);
                                        const selectEl = document.getElementById("aircraftSelect");
                                        selectEl.addEventListener("change", reloadLiveries)
                                        selectEl.innerHTML = "";
                                        aircraftMap.forEach(aircraft => {
                                            const optionEl = document.createElement("option");
                                            optionEl.innerHTML = aircraft.aircraftName;
                                            optionEl.value = aircraft.aircraftID;
                                            selectEl.appendChild(optionEl);
                                        });
                                        sort('aircraftSelect');
                                        reloadLiveries();
                                    } else {
                                        swal("Oh no!", "Something went wrong loading the list of aircraft!", 'error');
                                    }
                                }
                            });

                            xhr.open("GET", "https://v4.api.va-center.com/v4/aircraft/all");

                            xhr.send(data);
                        })();
                        function reloadLiveries(){
                            const currentAircraft = $("#aircraftSelect").val();
                            console.log(currentAircraft)
                            console.log(aircraftMap)
                            const liveryList = aircraftMap.get(currentAircraft).liveries;
                            
                            const selectEl = document.getElementById("liverySelect");
                            selectEl.innerHTML = "";
                            liveryList.forEach(livery => {
                                const optionEl = document.createElement("option");
                                optionEl.innerHTML = livery.liveryName;
                                optionEl.value = livery.liveryID;
                                selectEl.appendChild(optionEl);
                            });
                            sort('liverySelect');
                        };
                </script>
</body>

</html>